<Project Sdk="Microsoft.NET.Sdk">
	<PropertyGroup>
		<AssemblyName>eunice</AssemblyName>
		<OutputType>Exe</OutputType>
		<PackageDescription>Improve cohesion and modularity through hierarchical structure and unidirectional (non-circular) dependencies. Eunice analyses code and shows if dependencies are unidirectional or circular across the hierarchical structure.</PackageDescription>
		<PackageIcon>icon.png</PackageIcon>
		<PackageLicenseExpression>AGPL-3.0-only</PackageLicenseExpression>
		<PackageProjectUrl>https://devsnicket.com/eunice</PackageProjectUrl>
		<PackageTags>analyze;analyzer;architecture;dependency;dependencies;csharp;euince;stack;structure;uince;unice</PackageTags>
		<PackageType>DotNetCliTool</PackageType>
		<PackAsTool>true</PackAsTool>
		<Version>1.27.0</Version>
	</PropertyGroup>
	<ItemGroup>
		<PackageReference Include="Microsoft.Build.Locator" Version="1.2.6" />
	</ItemGroup>
	<ItemGroup Condition="$(TargetFrameworkVersion)=='v3.1'">
		<PackageReference Include="Microsoft.CodeAnalysis.CSharp" Version="3.7.0" />
		<PackageReference Include="Microsoft.CodeAnalysis.CSharp.Workspaces" Version="3.7.0" />
		<PackageReference Include="Microsoft.CodeAnalysis.Workspaces.MSBuild" Version="3.7.0" />
		<PackageReference Include="NuGet.ProjectModel" Version="5.7.3-rtm.5" />
	</ItemGroup>
	<ItemGroup Condition="$(TargetFrameworkVersion)=='v5.0'">
		<PackageReference Include="Microsoft.CodeAnalysis.CSharp" Version="3.11.0" />
		<PackageReference Include="Microsoft.CodeAnalysis.CSharp.Workspaces" Version="3.11.0" />
		<PackageReference Include="Microsoft.CodeAnalysis.Workspaces.MSBuild" Version="3.11.0" />
		<PackageReference Include="NuGet.ProjectModel" Version="5.11.2" />
	</ItemGroup>
	<ItemGroup Condition="$(TargetFrameworkVersion)=='v6.0'">
		<PackageReference Include="Microsoft.CodeAnalysis.CSharp" Version="4.3.1" />
		<PackageReference Include="Microsoft.CodeAnalysis.CSharp.Workspaces" Version="4.3.1" />
		<PackageReference Include="Microsoft.CodeAnalysis.Workspaces.MSBuild" Version="4.3.1" />
		<PackageReference Include="NuGet.ProjectModel" Version="6.3.4" />
	</ItemGroup>
	<ItemGroup Condition="$(TargetFrameworkVersion)=='v7.0'">
		<PackageReference Include="Microsoft.CodeAnalysis.CSharp" Version="4.7.0" />
		<PackageReference Include="Microsoft.CodeAnalysis.CSharp.Workspaces" Version="4.7.0" />
		<PackageReference Include="Microsoft.CodeAnalysis.Workspaces.MSBuild" Version="4.7.0" />
		<PackageReference Include="NuGet.ProjectModel" Version="6.7.1" />
	</ItemGroup>
	<ItemGroup Condition="$(TargetFrameworkVersion)=='v8.0'">
		<PackageReference Include="Microsoft.CodeAnalysis.CSharp" Version="4.11.0" />
		<PackageReference Include="Microsoft.CodeAnalysis.CSharp.Workspaces" Version="4.11.0" />
		<PackageReference Include="Microsoft.CodeAnalysis.Workspaces.MSBuild" Version="4.11.0" />
		<PackageReference Include="Microsoft.Extensions.Logging" Version="8.0.0" />
		<PackageReference Include="NuGet.ProjectModel" Version="6.11.1" />
	</ItemGroup>
	<ItemGroup>
		<Compile Include="AnalysisResult.fs" />
		<Compile Include="AnalyzeProject/DependUpon.fs" />
		<Compile Include="AnalyzeProject/Item.fs" />
		<Compile Include="AnalyzeProject/GetIdentifierOfAssembly.fs" />
		<Compile Include="AnalyzeProject/CreateItemWhenNamedType/FormatIdentifierOfSymbol.fs" />
		<Compile Include="AnalyzeProject/CreateItemWhenNamedType/CreateDependsUponFromSymbolsOfReferrer/GroupDependsUponIntoHierarchy.fs" />
		<Compile Include="AnalyzeProject/CreateItemWhenNamedType/CreateDependsUponFromSymbolsOfReferrer/.fs" />
		<Compile Include="AnalyzeProject/CreateItemWhenNamedType/CreateItemWhenDelegateOrEnumOrGetNamedType.fs" />
		<Compile Include="AnalyzeProject/CreateItemWhenNamedType/GetBasesOfTypeDeclaration.fs" />
		<Compile Include="AnalyzeProject/CreateItemWhenNamedType/GetImplementationOfMember.fs" />
		<Compile Include="AnalyzeProject/CreateItemWhenNamedType/GetSymbolsReferencedByMember/GetNamesUsedInSyntaxReference.fs" />
		<Compile Include="AnalyzeProject/CreateItemWhenNamedType/GetSymbolsReferencedByMember/.fs" />
		<Compile Include="AnalyzeProject/CreateItemWhenNamedType/CreateItemWithMembers.fs" />
		<Compile Include="AnalyzeProject/CreateItemWhenNamedType/CreateItemWithoutMembers.fs" />
		<Compile Include="AnalyzeProject/CreateItemWhenNamedType/MemberBehavior.fs" />
		<Compile Include="AnalyzeProject/CreateItemWhenNamedType/.fs" />
		<Compile Include="AnalyzeProject/FormatItemsAsYaml/QuoteIdentifier.fs" />
		<Compile Include="AnalyzeProject/FormatItemsAsYaml/IndentLines.fs" />
		<Compile Include="AnalyzeProject/FormatItemsAsYaml/SequenceBlockEntryFromLines/.fs" />
		<Compile Include="AnalyzeProject/FormatItemsAsYaml/FormatKeyValueLinesMapping.fs" />
		<Compile Include="AnalyzeProject/FormatItemsAsYaml/FormatDependsUponMapping/.fs" />
		<Compile Include="AnalyzeProject/FormatItemsAsYaml/.fs" />
		<Compile Include="AnalyzeProject/.fs" />
		<Compile Include="CallAnalyzeProjectForProjectOrSolutionPath/AddFailuresToErrorsFromWorkspaceEvent.fs" />
		<Compile Include="CallAnalyzeProjectForProjectOrSolutionPath/FormatNotSupportedErrorForProject.fs" />
		<Compile Include="CallAnalyzeProjectForProjectOrSolutionPath/IsProjectSupported.fs" />
		<Compile Include="CallAnalyzeProjectForProjectOrSolutionPath/GetErrorsAndProjectsFromSolution.fs" />
		<Compile Include="CallAnalyzeProjectForProjectOrSolutionPath/.fs" />
		<Compile Include="ReadTextFromEmbedded.fs" />
		<Compile Include="WriteInteractiveInDirectoryPathWithYaml/.fs" />
		<Compile Include="ExecuteProgram/ArgumentNames.fs" />
		<Compile Include="ExecuteProgram/FormatHeaderComment/.fs" />
		<Compile Include="ExecuteProgram/ParseArgumentsAndInferFromDirectoryPath/.fs" />
		<Compile Include="ExecuteProgram/WriteNameAndVersion/.fs" />
		<Compile Include="ExecuteProgram/.fs" />
	</ItemGroup>
	<ItemGroup>
		<EmbeddedResource Include="WriteInteractiveInDirectoryPathWithYaml/index.html" />
	</ItemGroup>
	<ItemGroup>
		<None Include="license.txt" Pack="true" PackagePath=""/>
		<None Include="package/$(PackageIcon)" Pack="true" PackagePath="" />
	</ItemGroup>
</Project>
